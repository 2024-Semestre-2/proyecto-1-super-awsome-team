/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author someone
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserAsm = new javax.swing.JFileChooser();
        jFileChooserConfig = new javax.swing.JFileChooser();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemOpenFile = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        javax.swing.JMenuItem jMenuItemConfig = new javax.swing.JMenuItem();

        jFileChooserAsm.setFileFilter(new proyecto1.AsmFilter());
        jFileChooserAsm.setMultiSelectionEnabled(true);

        jFileChooserConfig.setFileFilter(new proyecto1.TxtFilter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu3.setText("File");

        jMenuItemOpenFile.setText("Open File");
        jMenuItemOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenFileActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemOpenFile);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");

        jMenuItemConfig.setText("Config");
        jMenuItemConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConfigActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemConfig);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 937, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenFileActionPerformed
      int returnVal = jFileChooserAsm.showOpenDialog(this);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        //asmFiles = jFileChooser1.getSelectedFiles();
        
        // pruebas validaciones con archivo 
        File file = jFileChooserAsm.getSelectedFile();
        System.out.println(Arrays.toString(asmFiles));
      
        AsmLoader asmLoader = new AsmLoader();
        List<Expression> expressions = asmLoader.loadFile(file.getAbsolutePath());
        
        if (expressions != null && !expressions.isEmpty()) {
          System.out.println("File loaded successfully.");
          for (Expression exp : expressions) {
            System.out.println(exp);  // Imprime cada instrucción cargada
          }
        } 
        else {
          System.out.println("No valid instructions found in the file.");
        }
      } 
      else {
        System.out.println("File access cancelled by user.");
      }

    }//GEN-LAST:event_jMenuItemOpenFileActionPerformed

    /**
     * Metodo encargado de dar funcionalidad en display de configuraciones 
     * @param evt 
     */
    private void jMenuItemConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConfigActionPerformed
      System.out.println("Analizando Configuraciónes...");
      // Abrir el diálogo para seleccionar un archivo
      int returnVal = jFileChooserConfig.showOpenDialog(this);
      
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = jFileChooserConfig.getSelectedFile();
        if (!file.getName().endsWith(".txt")) {
                // Mostrar un cuadro de mensaje de advertencia
                JOptionPane.showMessageDialog(null, "Por favor selecciona un archivo .txt", "Archivo inválido", JOptionPane.ERROR_MESSAGE);
        }
        else {
          try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line = br.readLine(); // Leer la primera línea
            if (line != null) {
              // Separar los valores de memoria
              String[] memorySizes = line.split(" ");
                if (memorySizes.length == 2) {
                  int mainMemorySize = Integer.parseInt(memorySizes[0]);  // Tamaño de la memoria principal
                  int virtualMemorySize = Integer.parseInt(memorySizes[1]);  // Tamaño de la memoria virtual
                    
                  System.out.println("Memoria Principal: " + mainMemorySize);
                  System.out.println("Memoria Virtual: " + virtualMemorySize);
                } 
                else {
                  throw new IllegalArgumentException("Formato inválido. Se requieren dos números en la primera línea.");
                }
            }
          } 
          catch (IOException | NumberFormatException e) {
            System.err.println("Error al leer el archivo de configuración: " + e.getMessage());
          }
        }
      }
    }//GEN-LAST:event_jMenuItemConfigActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }
    
    private File[] asmFiles; 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooserAsm;
    private javax.swing.JFileChooser jFileChooserConfig;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItemOpenFile;
    // End of variables declaration//GEN-END:variables
}
